openapi: 3.0.3
info:
  title: Music Band Management API
  description: |
    API для управления коллекцией музыкальных групп.
    
    Система включает два веб-сервиса:
    - **Основной сервис** - полное управление коллекцией музыкальных групп
    - **Grammy сервис** - дополнительные операции с синглами и участниками
  version: 1.0.0
  contact:
    name: API Support
    email: support@musicband.api
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://helios:8080/api/v1
    description: Production server on Helios

tags:
  - name: MusicBand
    description: Операции с музыкальными группами
  - name: Statistics
    description: Статистические операции
  - name: Search
    description: Поиск групп по критериям
  - name: Grammy
    description: Grammy сервис - дополнительные операции

paths:
  /bands:
    get:
      tags:
        - MusicBand
      summary: Получить список музыкальных групп
      description: |
        Получение массива музыкальных групп с поддержкой:
        - Фильтрации по любым полям
        - Сортировки по любой комбинации полей
        - Постраничного вывода результатов
      operationId: getBands
      parameters:
        - name: page
          in: query
          description: Номер страницы (начинается с 0)
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
          example: 0
        - name: size
          in: query
          description: Размер страницы
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: sort
          in: query
          description: Поля для сортировки (например, "name,asc" или "numberOfParticipants,desc")
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          example: ["name,asc", "numberOfParticipants,desc"]
        - name: name
          in: query
          description: Фильтр по названию группы
          required: false
          schema:
            type: string
          example: "Beatles"
        - name: numberOfParticipants
          in: query
          description: Фильтр по количеству участников
          required: false
          schema:
            type: integer
            format: int32
          example: 4
        - name: genre
          in: query
          description: Фильтр по жанру
          required: false
          schema:
            $ref: '#/components/schemas/MusicGenre'
        - name: albumsCount
          in: query
          description: Фильтр по количеству альбомов
          required: false
          schema:
            type: integer
            format: int32
          example: 10
        - name: coordinatesX
          in: query
          description: Фильтр по координате X
          required: false
          schema:
            type: number
            format: double
        - name: coordinatesY
          in: query
          description: Фильтр по coordinate Y
          required: false
          schema:
            type: integer
            format: int64
            maximum: 945
      responses:
        '200':
          description: Список музыкальных групп
          content:
            application/xml:
              schema:
                type: object
                properties:
                  bands:
                    type: array
                    items:
                      $ref: '#/components/schemas/MusicBand'
                  totalElements:
                    type: integer
                    format: int64
                    description: Общее количество элементов
                  totalPages:
                    type: integer
                    format: int32
                    description: Общее количество страниц
                  currentPage:
                    type: integer
                    format: int32
                    description: Текущая страница
                  pageSize:
                    type: integer
                    format: int32
                    description: Размер страницы
                xml:
                  name: bandsResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - MusicBand
      summary: Создать новую музыкальную группу
      description: Добавление новой музыкальной группы в коллекцию
      operationId: createBand
      requestBody:
        description: Данные новой музыкальной группы
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/MusicBand'
            example: |
              <?xml version="1.0" encoding="UTF-8"?>
              <musicBand>
                <name>The Beatles</name>
                <coordinates>
                  <x>10.5</x>
                  <y>100</y>
                </coordinates>
                <numberOfParticipants>4</numberOfParticipants>
                <albumsCount>13</albumsCount>
                <genre>POP</genre>
                <label>
                  <sales>1000000.50</sales>
                </label>
              </musicBand>
      responses:
        '201':
          description: Музыкальная группа успешно создана
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBand'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /bands/{id}:
    get:
      tags:
        - MusicBand
      summary: Получить музыкальную группу по ID
      description: Получение информации о конкретной музыкальной группе
      operationId: getBandById
      parameters:
        - name: id
          in: path
          description: Идентификатор музыкальной группы
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 1
      responses:
        '200':
          description: Информация о музыкальной группе
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBand'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - MusicBand
      summary: Обновить музыкальную группу
      description: Полное обновление информации о музыкальной группе
      operationId: updateBand
      parameters:
        - name: id
          in: path
          description: Идентификатор музыкальной группы
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 1
      requestBody:
        description: Обновленные данные музыкальной группы
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/MusicBand'
      responses:
        '200':
          description: Музыкальная группа успешно обновлена
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBand'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - MusicBand
      summary: Удалить музыкальную группу
      description: Удаление музыкальной группы из коллекции
      operationId: deleteBand
      parameters:
        - name: id
          in: path
          description: Идентификатор музыкальной группы
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 1
      responses:
        '204':
          description: Музыкальная группа успешно удалена
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /bands/statistics/average-participants:
    get:
      tags:
        - Statistics
      summary: Получить среднее количество участников
      description: Вычисляет среднее значение поля numberOfParticipants для всех музыкальных групп в коллекции
      operationId: getAverageParticipants
      responses:
        '200':
          description: Среднее количество участников
          content:
            application/xml:
              schema:
                type: object
                properties:
                  averageParticipants:
                    type: number
                    format: double
                    description: Среднее количество участников
                    example: 4.2
                  totalBands:
                    type: integer
                    format: int32
                    description: Общее количество групп в выборке
                    example: 50
                xml:
                  name: averageParticipantsResponse
        '500':
          $ref: '#/components/responses/InternalServerError'

  /bands/search/by-name-prefix:
    get:
      tags:
        - Search
      summary: Найти группы по префиксу названия
      description: Возвращает массив музыкальных групп, название которых начинается с заданной подстроки
      operationId: getBandsByNamePrefix
      parameters:
        - name: prefix
          in: query
          description: Префикс названия группы для поиска
          required: true
          schema:
            type: string
            minLength: 1
          example: "The"
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Размер страницы
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 20
        - name: ignoreCase
          in: query
          description: Игнорировать регистр при поиске
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Список музыкальных групп с названиями, начинающимися с указанного префикса
          content:
            application/xml:
              schema:
                type: object
                properties:
                  bands:
                    type: array
                    items:
                      $ref: '#/components/schemas/MusicBand'
                  totalElements:
                    type: integer
                    format: int64
                  searchPrefix:
                    type: string
                    description: Использованный префикс для поиска
                xml:
                  name: bandsByPrefixResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /bands/search/by-genre-less-than:
    get:
      tags:
        - Search
      summary: Найти группы с жанром меньше указанного
      description: |
        Возвращает массив музыкальных групп, значение поля genre которых меньше заданного.
        Порядок жанров по возрастанию: PROGRESSIVE_ROCK (0) < POP (1) < MATH_ROCK (2)
      operationId: getBandsByGenreLessThan
      parameters:
        - name: genre
          in: query
          description: Жанр для сравнения
          required: true
          schema:
            $ref: '#/components/schemas/MusicGenre'
          example: POP
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Размер страницы
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Список музыкальных групп с жанром меньше указанного
          content:
            application/xml:
              schema:
                type: object
                properties:
                  bands:
                    type: array
                    items:
                      $ref: '#/components/schemas/MusicBand'
                  totalElements:
                    type: integer
                    format: int64
                  searchGenre:
                    $ref: '#/components/schemas/MusicGenre'
                xml:
                  name: bandsByGenreResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /grammy/band/{band-id}/singles/add:
    post:
      tags:
        - Grammy
      summary: Добавить новый сингл группе
      description: |
        Добавляет новый сингл указанной музыкальной группе.
        Операция взаимодействует с основным API для получения информации о группе.
      operationId: addSingleToBand
      parameters:
        - name: band-id
          in: path
          description: Идентификатор музыкальной группы
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 1
      requestBody:
        description: Информация о новом сингле
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Single'
            example: |
              <?xml version="1.0" encoding="UTF-8"?>
              <single>
                <title>Yesterday</title>
                <duration>125</duration>
                <releaseDate>1965-09-13</releaseDate>
                <chartPosition>1</chartPosition>
              </single>
      responses:
        '201':
          description: Сингл успешно добавлен группе
          content:
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном добавлении
                    example: "Single successfully added to band"
                  single:
                    $ref: '#/components/schemas/Single'
                  bandInfo:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                      name:
                        type: string
                    description: Краткая информация о группе
                xml:
                  name: addSingleResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Музыкальная группа не найдена
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /grammy/band/{band-id}/participants/add:
    post:
      tags:
        - Grammy
      summary: Добавить участника в группу
      description: |
        Добавляет нового участника в указанную музыкальную группу.
        Автоматически обновляет поле numberOfParticipants в основной записи группы.
      operationId: addParticipantToBand
      parameters:
        - name: band-id
          in: path
          description: Идентификатор музыкальной группы
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
          example: 1
      requestBody:
        description: Информация о новом участнике
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Participant'
            example: |
              <?xml version="1.0" encoding="UTF-8"?>
              <participant>
                <name>John Lennon</name>
                <role>Vocalist, Guitarist</role>
                <joinDate>1960-07-06</joinDate>
                <instrument>Guitar</instrument>
              </participant>
      responses:
        '201':
          description: Участник успешно добавлен в группу
          content:
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном добавлении
                    example: "Participant successfully added to band"
                  participant:
                    $ref: '#/components/schemas/Participant'
                  updatedParticipantsCount:
                    type: integer
                    format: int32
                    description: Обновленное количество участников в группе
                  bandInfo:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                      name:
                        type: string
                    description: Краткая информация о группе
                xml:
                  name: addParticipantResponse
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Музыкальная группа не найдена
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    MusicBand:
      type: object
      required:
        - name
        - coordinates
        - numberOfParticipants
        - genre
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          description: Уникальный идентификатор группы (генерируется автоматически)
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          description: Название музыкальной группы (не может быть null или пустой)
          example: "The Beatles"
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          description: Дата создания записи (генерируется автоматически)
          readOnly: true
          example: "2023-12-01T10:30:00Z"
        numberOfParticipants:
          type: integer
          format: int32
          minimum: 1
          description: Количество участников группы (должно быть больше 0)
          example: 4
        albumsCount:
          type: integer
          format: int32
          minimum: 1
          nullable: true
          description: Количество альбомов (может быть null, если задано - должно быть больше 0)
          example: 13
        genre:
          $ref: '#/components/schemas/MusicGenre'
        label:
          $ref: '#/components/schemas/Label'
      xml:
        name: musicBand

    Coordinates:
      type: object
      required:
        - y
      properties:
        x:
          type: number
          format: double
          description: Координата X
          example: 10.5
        y:
          type: integer
          format: int64
          maximum: 945
          description: Координата Y (максимальное значение 945, не может быть null)
          example: 100
      xml:
        name: coordinates

    Label:
      type: object
      properties:
        sales:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
          description: Продажи лейбла (значение должно быть больше 0)
          example: 1000000.50
      xml:
        name: label

    MusicGenre:
      type: string
      enum:
        - PROGRESSIVE_ROCK
        - POP
        - MATH_ROCK
      description: |
        Жанр музыки. Порядок для сравнения:
        - PROGRESSIVE_ROCK (0)
        - POP (1) 
        - MATH_ROCK (2)
      example: POP

    Single:
      type: object
      required:
        - title
        - duration
        - releaseDate
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          description: Уникальный идентификатор сингла
          readOnly: true
          example: 1
        title:
          type: string
          minLength: 1
          description: Название сингла
          example: "Yesterday"
        duration:
          type: integer
          format: int32
          minimum: 1
          description: Длительность сингла в секундах
          example: 125
        releaseDate:
          type: string
          format: date
          description: Дата выпуска сингла
          example: "1965-09-13"
        chartPosition:
          type: integer
          format: int32
          minimum: 1
          nullable: true
          description: Позиция в чартах (может быть null)
          example: 1
      xml:
        name: single

    Participant:
      type: object
      required:
        - name
        - role
        - joinDate
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          description: Уникальный идентификатор участника
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          description: Имя участника
          example: "John Lennon"
        role:
          type: string
          minLength: 1
          description: Роль участника в группе
          example: "Vocalist, Guitarist"
        joinDate:
          type: string
          format: date
          description: Дата присоединения к группе
          example: "1960-07-06"
        instrument:
          type: string
          nullable: true
          description: Основной инструмент (может быть null)
          example: "Guitar"
      xml:
        name: participant

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
          example: 400
        message:
          type: string
          description: Сообщение об ошибке
          example: "Validation failed"
        details:
          type: string
          description: Детальное описание ошибки
          example: "Field 'name' cannot be empty"
        timestamp:
          type: string
          format: date-time
          description: Время возникновения ошибки
          example: "2023-12-01T10:30:00Z"
      xml:
        name: error

  responses:
    BadRequest:
      description: Неверные данные запроса или нарушение ограничений целостности
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
          example: |
            <?xml version="1.0" encoding="UTF-8"?>
            <error>
              <code>400</code>
              <message>Validation failed</message>
              <details>Field 'name' cannot be empty</details>
              <timestamp>2023-12-01T10:30:00Z</timestamp>
            </error>
    
    NotFound:
      description: Ресурс не найден
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
          example: |
            <?xml version="1.0" encoding="UTF-8"?>
            <error>
              <code>404</code>
              <message>Resource not found</message>
              <details>MusicBand with id 123 not found</details>
              <timestamp>2023-12-01T10:30:00Z</timestamp>
            </error>
    
    InternalServerError:
      description: Внутренняя ошибка сервера
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
          example: |
            <?xml version="1.0" encoding="UTF-8"?>
            <error>
              <code>500</code>
              <message>Internal server error</message>
              <details>An unexpected error occurred while processing the request</details>
              <timestamp>2023-12-01T10:30:00Z</timestamp>
            </error>

  parameters:
    BandId:
      name: id
      in: path
      description: Идентификатор музыкальной группы
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
      example: 1

    PageParam:
      name: page
      in: query
      description: Номер страницы (начинается с 0)
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0

    SizeParam:
      name: size
      in: query
      description: Размер страницы
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
